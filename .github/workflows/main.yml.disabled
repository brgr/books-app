name: Build + Deploy
#description: 'Build and deploy to my DigitalOcean droplet'

# Note: At the moment, no server is set up for deployment - it is only tested locally. Thus also the IP addresses etc.
#  that are listed here, as well as all jobs, don't work.

jobs:
  test:
    name: Test
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout Project
        uses: actions/checkout@v2
      - name: Run tests (lein test)
        run: lein test
      - name: Start MongoDB in a docker container
        run: docker-compose -f docker/docker-compose.yml up -d
      - name: Run integration tests (lein test :integration)
        run: lein test :integration
      - name: Shut down docker containers
        run: docker-compose -f docker/docker-compose.yml down

  build:
    name: Build
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout Project
        uses: actions/checkout@v2

      - name: Setup DigitalOcean Private Key for SSH and SCP Access
        env:
          DIGITALOCEAN_SSH_KEY_GITHUB_ACTIONS: ${{ secrets.DIGITALOCEAN_SSH_KEY_GITHUB_ACTIONS }}
        run: |
          mkdir ~/.ssh
          echo "$DIGITALOCEAN_SSH_KEY_GITHUB_ACTIONS" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Build uberjar file
        run: |
          lein ring uberjar

      - name: Using SCP, load uberjar and Dockerfile to DigitalOcean droplet
        run: |
          scp -o StrictHostKeyChecking=no target/*-standalone.jar Dockerfile dominik@165.22.76.70:/home/dominik

      - name: Using SSH, stop old container, build and run new ring-books server
        env:
          docker_stop: 'if [[ -f container_id ]] ; then docker stop $(cat container_id) ; rm ./container_id ; fi'
          ls_and_pwd: 'ls -a && pwd'
          docker_build: 'docker build -t ring-books .'
          docker_run: 'docker run --rm --cidfile container_id -p 3000-3001:3000-3001 -d ring-books'
        run: |
          ssh -o StrictHostKeyChecking=no dominik@165.22.76.70 "$docker_stop && $ls_and_pwd && $docker_build && $docker_run"

# Next steps for Github Actions:
# - MongoDB server is still missing --> docker compose!
# - at some point: also build the frontend
# - also include some tests!


